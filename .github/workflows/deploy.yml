# .github/workflows/deploy.yml
# Place this file in: constructionPlatformInfra/.github/workflows/deploy.yml

name: Terraform Deploy Backend

on:
  repository_dispatch:
    types: [deploy-backend]
  workflow_dispatch:  # Allows manual trigger
    inputs:
      image:
        description: 'Full Docker image path'
        required: true
        default: 'europe-west1-docker.pkg.dev/regal-framework-475315-m1/docker-repo/ub-travel-services-backend:latest'

env:
  TF_VAR_project_id: ${{ secrets.TF_VAR_PROJECT_ID }}
  TF_VAR_region: ${{ secrets.TF_VAR_REGION }}
  TF_VAR_mongo_region: ${{ secrets.TF_VAR_MONGO_REGION }}
  TF_VAR_frontend_simple_image_name: ${{ secrets.TF_VAR_FRONTEND_SIMPLE_IMAGE_NAME }}
  TF_VAR_secret_key: ${{ secrets.TF_VAR_SECRET_KEY }}
  TF_VAR_sendgrid_api_key: ${{ secrets.TF_VAR_SENDGRID_API_KEY }}
  TF_VAR_stripe_secret_key: ${{ secrets.TF_VAR_STRIPE_SECRET_KEY }}
  TF_VAR_OPENAI_API_KEY: ${{ secrets.TF_VAR_OPENAI_API_KEY }}

jobs:
  terraform-deploy:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      id-token: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set backend image variable
        id: image
        run: |
          if [ "${{ github.event_name }}" == "repository_dispatch" ]; then
            IMAGE="${{ github.event.client_payload.image }}"
          else
            IMAGE="${{ github.event.inputs.image }}"
          fi
          echo "backend_image=${IMAGE}" >> $GITHUB_OUTPUT
          echo "🐳 Deploying image: ${IMAGE}"

      # Manual auth using Service Account JSON key
      - name: Write SA key and authenticate
        run: |
          echo '${{ secrets.GCP_SA_KEY }}' > $HOME/gcp-sa.json
          if [ ! -s "$HOME/gcp-sa.json" ]; then
            echo "❌ GCP_SA_KEY is empty"; exit 1;
          fi
          jq -e .type $HOME/gcp-sa.json >/dev/null || { echo "❌ GCP_SA_KEY is not valid JSON"; exit 1; }
          
          # Authenticate
          gcloud auth activate-service-account --key-file="$HOME/gcp-sa.json"
          gcloud config set project "${{ secrets.TF_VAR_PROJECT_ID }}"
          
          # Set env var for Terraform
          echo "GOOGLE_APPLICATION_CREDENTIALS=$HOME/gcp-sa.json" >> $GITHUB_ENV
        env:
          CLOUDSDK_CORE_DISABLE_PROMPTS: '1'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Terraform Init
        working-directory: ./prod
        run: terraform init

      - name: Terraform Plan
        working-directory: ./prod
        run: |
          terraform plan \
            -var="backend_image_name=${{ steps.image.outputs.backend_image }}" \
            -target=module.backend.google_cloud_run_service.service \
            -out=tfplan
        env:
          TF_VAR_backend_image_name: ${{ steps.image.outputs.backend_image }}

      - name: Terraform Apply
        working-directory: ./prod
        run: terraform apply -auto-approve tfplan

      - name: Get Backend URL
        working-directory: ./prod
        run: |
          BACKEND_URL=$(terraform output -raw backend_url || echo "not available")
          echo "✅ Backend deployed successfully!"
          echo "🌐 Backend URL: ${BACKEND_URL}"
          echo "📦 Image: ${{ steps.image.outputs.backend_image }}"

      - name: Deployment Summary
        run: |
          echo "## Deployment Summary 🚀" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Image**: \`${{ steps.image.outputs.backend_image }}\`" >> $GITHUB_STEP_SUMMARY
          if [ "${{ github.event_name }}" == "repository_dispatch" ]; then
            echo "- **Triggered by**: ${{ github.event.client_payload.actor }}" >> $GITHUB_STEP_SUMMARY
            echo "- **Commit SHA**: \`${{ github.event.client_payload.sha }}\`" >> $GITHUB_STEP_SUMMARY
          fi
          echo "- **Terraform**: Applied successfully ✅" >> $GITHUB_STEP_SUMMARY